import React, { useState } from 'react';
import CategoryBar from '../components/CategoryBar';
import FoodGrid from '../components/FoodGrid';
import FoodModal from '../components/FoodModal';
import CartModal from '../components/CartModal';
import OrderSummaryModal from '../components/OrderSummaryModal';

const HomePage: React.FC = () => {
  const [selectedFood, setSelectedFood] = useState(null);
  const [cart, setCart] = useState([]);
  const [showFoodModal, setShowFoodModal] = useState(false);
  const [showCartModal, setShowCartModal] = useState(false);
  const [showOrderSummary, setShowOrderSummary] = useState(false);

  const handleFoodSelect = (food) => {
    setSelectedFood(food);
    setShowFoodModal(true);
  };

  const handleAddToCart = (food, quantity) => {
    setCart([...cart, { ...food, quantity }]);
  };

  const handleCheckout = () => {
    setShowCartModal(false);
    setShowOrderSummary(true);
  };

  const handleCloseOrderSummary = () => {
    setShowOrderSummary(false);
  };

  const categories = ['음식 카테고리1', '음식 카테고리2']; // 예시
  const foods = [/* 음식 데이터 배열 */];

  return (
    <div className="home-page">
      <CategoryBar categories={categories} onSelectCategory={() => {}} />
      <FoodGrid foods={foods} onSelectFood={handleFoodSelect} />

      {showFoodModal && selectedFood && (
        <FoodModal
          food={selectedFood}
          onClose={() => setShowFoodModal(false)}
          onAddToCart={handleAddToCart}
        />
      )}

      {showCartModal && (
        <CartModal
          cartItems={cart}
          onClose={() => setShowCartModal(false)}
          onCheckout={handleCheckout}
        />
      )}

      {showOrderSummary && (
        <OrderSummaryModal
          order={{ items: cart, total: cart.reduce((sum, item) => sum + item.price * item.quantity, 0) }}
          onClose={handleCloseOrderSummary}
        />
      )}
    </div>
  );
};

export default HomePage;